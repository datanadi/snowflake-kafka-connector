// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor.proto

package com.snowflake.kafka.test.protobuf;

public final class SensorReadingImpl {
  private SensorReadingImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SensorReadingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.snowflake.kafka.test.protobuf.SensorReading)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
     * @return Whether the device field is set.
     */
    boolean hasDevice();
    /**
     * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
     * @return The device.
     */
    com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device getDevice();
    /**
     * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
     */
    com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder getDeviceOrBuilder();

    /**
     * <code>int64 dateTime = 2;</code>
     * @return The dateTime.
     */
    long getDateTime();

    /**
     * <code>double reading = 3;</code>
     * @return The reading.
     */
    double getReading();
  }
  /**
   * Protobuf type {@code com.snowflake.kafka.test.protobuf.SensorReading}
   */
  public static final class SensorReading extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.snowflake.kafka.test.protobuf.SensorReading)
      SensorReadingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorReading.newBuilder() to construct.
    private SensorReading(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorReading() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SensorReading();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorReading(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder subBuilder = null;
              if (device_ != null) {
                subBuilder = device_.toBuilder();
              }
              device_ = input.readMessage(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(device_);
                device_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              dateTime_ = input.readInt64();
              break;
            }
            case 25: {

              reading_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.class, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Builder.class);
    }

    public interface DeviceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.snowflake.kafka.test.protobuf.SensorReading.Device)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string deviceID = 1;</code>
       * @return The deviceID.
       */
      java.lang.String getDeviceID();
      /**
       * <code>string deviceID = 1;</code>
       * @return The bytes for deviceID.
       */
      com.google.protobuf.ByteString
          getDeviceIDBytes();

      /**
       * <code>bool enabled = 2;</code>
       * @return The enabled.
       */
      boolean getEnabled();
    }
    /**
     * Protobuf type {@code com.snowflake.kafka.test.protobuf.SensorReading.Device}
     */
    public static final class Device extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.snowflake.kafka.test.protobuf.SensorReading.Device)
        DeviceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Device.newBuilder() to construct.
      private Device(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Device() {
        deviceID_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Device();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Device(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceID_ = s;
                break;
              }
              case 16: {

                enabled_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.class, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder.class);
      }

      public static final int DEVICEID_FIELD_NUMBER = 1;
      private volatile java.lang.Object deviceID_;
      /**
       * <code>string deviceID = 1;</code>
       * @return The deviceID.
       */
      @java.lang.Override
      public java.lang.String getDeviceID() {
        java.lang.Object ref = deviceID_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceID_ = s;
          return s;
        }
      }
      /**
       * <code>string deviceID = 1;</code>
       * @return The bytes for deviceID.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDeviceIDBytes() {
        java.lang.Object ref = deviceID_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ENABLED_FIELD_NUMBER = 2;
      private boolean enabled_;
      /**
       * <code>bool enabled = 2;</code>
       * @return The enabled.
       */
      @java.lang.Override
      public boolean getEnabled() {
        return enabled_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getDeviceIDBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceID_);
        }
        if (enabled_ != false) {
          output.writeBool(2, enabled_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getDeviceIDBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceID_);
        }
        if (enabled_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, enabled_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device)) {
          return super.equals(obj);
        }
        com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device other = (com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device) obj;

        if (!getDeviceID()
            .equals(other.getDeviceID())) return false;
        if (getEnabled()
            != other.getEnabled()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceID().hashCode();
        hash = (37 * hash) + ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnabled());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.snowflake.kafka.test.protobuf.SensorReading.Device}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.snowflake.kafka.test.protobuf.SensorReading.Device)
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.class, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder.class);
        }

        // Construct using com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          deviceID_ = "";

          enabled_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_descriptor;
        }

        @java.lang.Override
        public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device getDefaultInstanceForType() {
          return com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.getDefaultInstance();
        }

        @java.lang.Override
        public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device build() {
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device buildPartial() {
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device result = new com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device(this);
          result.deviceID_ = deviceID_;
          result.enabled_ = enabled_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device) {
            return mergeFrom((com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device other) {
          if (other == com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.getDefaultInstance()) return this;
          if (!other.getDeviceID().isEmpty()) {
            deviceID_ = other.deviceID_;
            onChanged();
          }
          if (other.getEnabled() != false) {
            setEnabled(other.getEnabled());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object deviceID_ = "";
        /**
         * <code>string deviceID = 1;</code>
         * @return The deviceID.
         */
        public java.lang.String getDeviceID() {
          java.lang.Object ref = deviceID_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceID_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string deviceID = 1;</code>
         * @return The bytes for deviceID.
         */
        public com.google.protobuf.ByteString
            getDeviceIDBytes() {
          java.lang.Object ref = deviceID_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceID_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string deviceID = 1;</code>
         * @param value The deviceID to set.
         * @return This builder for chaining.
         */
        public Builder setDeviceID(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceID_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string deviceID = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDeviceID() {
          
          deviceID_ = getDefaultInstance().getDeviceID();
          onChanged();
          return this;
        }
        /**
         * <code>string deviceID = 1;</code>
         * @param value The bytes for deviceID to set.
         * @return This builder for chaining.
         */
        public Builder setDeviceIDBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceID_ = value;
          onChanged();
          return this;
        }

        private boolean enabled_ ;
        /**
         * <code>bool enabled = 2;</code>
         * @return The enabled.
         */
        @java.lang.Override
        public boolean getEnabled() {
          return enabled_;
        }
        /**
         * <code>bool enabled = 2;</code>
         * @param value The enabled to set.
         * @return This builder for chaining.
         */
        public Builder setEnabled(boolean value) {
          
          enabled_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool enabled = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEnabled() {
          
          enabled_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.snowflake.kafka.test.protobuf.SensorReading.Device)
      }

      // @@protoc_insertion_point(class_scope:com.snowflake.kafka.test.protobuf.SensorReading.Device)
      private static final com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device();
      }

      public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Device>
          PARSER = new com.google.protobuf.AbstractParser<Device>() {
        @java.lang.Override
        public Device parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Device(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Device> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Device> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DEVICE_FIELD_NUMBER = 1;
    private com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device device_;
    /**
     * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
     * @return Whether the device field is set.
     */
    @java.lang.Override
    public boolean hasDevice() {
      return device_ != null;
    }
    /**
     * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
     * @return The device.
     */
    @java.lang.Override
    public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device getDevice() {
      return device_ == null ? com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.getDefaultInstance() : device_;
    }
    /**
     * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
     */
    @java.lang.Override
    public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder getDeviceOrBuilder() {
      return getDevice();
    }

    public static final int DATETIME_FIELD_NUMBER = 2;
    private long dateTime_;
    /**
     * <code>int64 dateTime = 2;</code>
     * @return The dateTime.
     */
    @java.lang.Override
    public long getDateTime() {
      return dateTime_;
    }

    public static final int READING_FIELD_NUMBER = 3;
    private double reading_;
    /**
     * <code>double reading = 3;</code>
     * @return The reading.
     */
    @java.lang.Override
    public double getReading() {
      return reading_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (device_ != null) {
        output.writeMessage(1, getDevice());
      }
      if (dateTime_ != 0L) {
        output.writeInt64(2, dateTime_);
      }
      if (reading_ != 0D) {
        output.writeDouble(3, reading_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (device_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDevice());
      }
      if (dateTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, dateTime_);
      }
      if (reading_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, reading_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading)) {
        return super.equals(obj);
      }
      com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading other = (com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading) obj;

      if (hasDevice() != other.hasDevice()) return false;
      if (hasDevice()) {
        if (!getDevice()
            .equals(other.getDevice())) return false;
      }
      if (getDateTime()
          != other.getDateTime()) return false;
      if (java.lang.Double.doubleToLongBits(getReading())
          != java.lang.Double.doubleToLongBits(
              other.getReading())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDevice()) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDevice().hashCode();
      }
      hash = (37 * hash) + DATETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDateTime());
      hash = (37 * hash) + READING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getReading()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.snowflake.kafka.test.protobuf.SensorReading}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.snowflake.kafka.test.protobuf.SensorReading)
        com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReadingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.class, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Builder.class);
      }

      // Construct using com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (deviceBuilder_ == null) {
          device_ = null;
        } else {
          device_ = null;
          deviceBuilder_ = null;
        }
        dateTime_ = 0L;

        reading_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.snowflake.kafka.test.protobuf.SensorReadingImpl.internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor;
      }

      @java.lang.Override
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading getDefaultInstanceForType() {
        return com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.getDefaultInstance();
      }

      @java.lang.Override
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading build() {
        com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading buildPartial() {
        com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading result = new com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading(this);
        if (deviceBuilder_ == null) {
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        result.dateTime_ = dateTime_;
        result.reading_ = reading_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading) {
          return mergeFrom((com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading other) {
        if (other == com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.getDefaultInstance()) return this;
        if (other.hasDevice()) {
          mergeDevice(other.getDevice());
        }
        if (other.getDateTime() != 0L) {
          setDateTime(other.getDateTime());
        }
        if (other.getReading() != 0D) {
          setReading(other.getReading());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device device_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder> deviceBuilder_;
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       * @return Whether the device field is set.
       */
      public boolean hasDevice() {
        return deviceBuilder_ != null || device_ != null;
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       * @return The device.
       */
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device getDevice() {
        if (deviceBuilder_ == null) {
          return device_ == null ? com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.getDefaultInstance() : device_;
        } else {
          return deviceBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      public Builder setDevice(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          device_ = value;
          onChanged();
        } else {
          deviceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      public Builder setDevice(
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          device_ = builderForValue.build();
          onChanged();
        } else {
          deviceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      public Builder mergeDevice(com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device value) {
        if (deviceBuilder_ == null) {
          if (device_ != null) {
            device_ =
              com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.newBuilder(device_).mergeFrom(value).buildPartial();
          } else {
            device_ = value;
          }
          onChanged();
        } else {
          deviceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = null;
          onChanged();
        } else {
          device_ = null;
          deviceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder getDeviceBuilder() {
        
        onChanged();
        return getDeviceFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder getDeviceOrBuilder() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilder();
        } else {
          return device_ == null ?
              com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.getDefaultInstance() : device_;
        }
      }
      /**
       * <code>.com.snowflake.kafka.test.protobuf.SensorReading.Device device = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.Device.Builder, com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading.DeviceOrBuilder>(
                  getDevice(),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }

      private long dateTime_ ;
      /**
       * <code>int64 dateTime = 2;</code>
       * @return The dateTime.
       */
      @java.lang.Override
      public long getDateTime() {
        return dateTime_;
      }
      /**
       * <code>int64 dateTime = 2;</code>
       * @param value The dateTime to set.
       * @return This builder for chaining.
       */
      public Builder setDateTime(long value) {
        
        dateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 dateTime = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDateTime() {
        
        dateTime_ = 0L;
        onChanged();
        return this;
      }

      private double reading_ ;
      /**
       * <code>double reading = 3;</code>
       * @return The reading.
       */
      @java.lang.Override
      public double getReading() {
        return reading_;
      }
      /**
       * <code>double reading = 3;</code>
       * @param value The reading to set.
       * @return This builder for chaining.
       */
      public Builder setReading(double value) {
        
        reading_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double reading = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearReading() {
        
        reading_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.snowflake.kafka.test.protobuf.SensorReading)
    }

    // @@protoc_insertion_point(class_scope:com.snowflake.kafka.test.protobuf.SensorReading)
    private static final com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading();
    }

    public static com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SensorReading>
        PARSER = new com.google.protobuf.AbstractParser<SensorReading>() {
      @java.lang.Override
      public SensorReading parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorReading(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorReading> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorReading> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.snowflake.kafka.test.protobuf.SensorReadingImpl.SensorReading getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_snowflake_kafka_test_protobuf_SensorReading_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014sensor.proto\022!com.snowflake.kafka.test" +
      ".protobuf\"\250\001\n\rSensorReading\022G\n\006device\030\001 " +
      "\001(\01327.com.snowflake.kafka.test.protobuf." +
      "SensorReading.Device\022\020\n\010dateTime\030\002 \001(\003\022\017" +
      "\n\007reading\030\003 \001(\001\032+\n\006Device\022\020\n\010deviceID\030\001 " +
      "\001(\t\022\017\n\007enabled\030\002 \001(\010B\023B\021SensorReadingImp" +
      "lb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_snowflake_kafka_test_protobuf_SensorReading_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor,
        new java.lang.String[] { "Device", "DateTime", "Reading", });
    internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_descriptor =
      internal_static_com_snowflake_kafka_test_protobuf_SensorReading_descriptor.getNestedTypes().get(0);
    internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_snowflake_kafka_test_protobuf_SensorReading_Device_descriptor,
        new java.lang.String[] { "DeviceID", "Enabled", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
